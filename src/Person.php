<?php
/**
 * Created by PhpStorm.
 * User: lucius
 * Date: 21.12.15
 * Time: 14:53
 */

namespace Concrete\Package\BaclucPersonPackage\Src;
use Concrete\Package\BasicTablePackage\Src\EntityGetterSetter;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Concrete\Package\BasicTablePackage\Src\FieldTypes\DateField;
use Concrete\Package\BasicTablePackage\Src\Entity;


/**
 * Class Person
 * @package Concrete\Package\BaclucPersonPackage\Src
 * @Entity
 * @Table(name="bacluc_person")
 */
class Person extends Entity
{
    use EntityGetterSetter;
    /**
     * @var int
     * @Id @Column(type="integer")
     * @GEneratedValue(strategy="AUTO")
     */
    protected $id;




    /**
     * @Column(type="string")
     */
    protected $scoutname;

    /**
     * @Column(type="string")
     */
    protected $surname;

    /**
     * @Column(type="string")
     */
    protected $middlename;

    /**
     * @Column(type="string")
     */
    protected $lastname;

    /**
     * @Column(type="date", nullable=true)
     */
    protected $birthdate;

    /**
     * @Column(type="boolean")
     */
    protected $public_picture_allowed;

    /**
     * @var Person[]
     * @ManyToMany(targetEntity="Concrete\Package\BaclucPersonPackage\Src\Person", inversedBy="Children")
     * @JoinTable(name="bacluc_parent_of",
     *     joinColumns={@JoinColumn(name="parent_id" , referencedColumnName="id")},
     *     inverseJoinColumns={@JoinColumn(name="child_id" , referencedColumnName="id")}
     *     )
     */
    protected $Parents;

    /**
     * @var Person[]
     * @ManyToMany(targetEntity="Concrete\Package\BaclucPersonPackage\Src\Person", mappedBy="Parents")
     *
     */
    protected $Children;
//
//    /**
//     * @var Note[]
//     * @OneToMany(targetEntity="Concrete\Package\BaclucPersonPackage\Src\Note", mappedBy="Person")
//     *
//     */
//    protected $Notes;



    public function __construct(){
        parent::__construct();
        if($this->Parents == null){
            $this->Parents = new ArrayCollection();
        }


        if($this->Children == null){
            $this->Children = new ArrayCollection();
        }

//        if($this->Notes == null){
//            $this->Notes = new ArrayCollection();
//        }
    }

    public function setDefaultFieldTypes()
    {
        parent::setDefaultFieldTypes(); // TODO: Change the autogenerated stub
        $this->fieldTypes['scoutname']->setLabel("Scoutname");
        $this->fieldTypes['surname']->setLabel("Surname");
        $this->fieldTypes['middlename']->setLabel("Middle Name");
        $this->fieldTypes['lastname']->setLabel("Lastname");
        $this->fieldTypes['birthdate']->setLabel("Birthdate");
        $this->fieldTypes['public_picture_allowed']->setLabel("Is it allowed to publish pictures of this Person?");
        $this->fieldTypes['public_picture_allowed']->setShowInTable(false);
        $this->fieldTypes['Parents']->setLabel("Parents");
        $this->fieldTypes['Children']->setLabel("Children");
    }


    public static function getDefaultGetDisplayStringFunction(){
        $function = function(Person $item){
            $dateField = new DateField("test", "test", "test");
            $returnString ="";
            if(strlen($item->scoutname)>0){
                $returnString.=$item->scoutname." ";
            }
            if(strlen($item->surname!=null)>0){
                $returnString.=$item->surname." ";
            }
            if(strlen($item->middlename!=null)){
                $returnString.=$item->middlename." ";
            }
            if(strlen($item->lastname!=null)){
                $returnString.=$item->lastname." ";
            }
            if($item->birthdate!=null){
                $dateField->setSQLValue($item->birthdate);
                $returnString.= " ".$dateField->getTableView();
            }
            return $returnString;
        };
        return $function;
    }




}